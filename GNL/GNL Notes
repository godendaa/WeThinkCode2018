read_to_string

read to string accepts a file descriptor and a pointer to a string in the get_next line function. a buff value is created to store the result of the read function. a char tmp is created and an int which returns the location of the last written byte. If malloc fails on the buffer the function exits with a -1 to show an error. value is then set to the number of bytes read from the fd and the read is completed. if something was written and the value is greater than 0 the last position of the buff is set to a nul terminator. tmp is then set to the joined string which was passed to the function and the original string is freed. the string is then set to the value of temp which is the original string and buff string. the buff is freed and the number of bytes read is returned. 

get_next_line

The get next line function takes in a file descriptor and char pointer to the location the line must be saved. a static variable is created to store all read strings. 
if the string is null and can not be malloced or the line is null or the file descriptor is invalid or the buffsize is invalid, Get Next Line exits with a -1. 
the chk variable is set if there is a new line in the string. If the chk variable is not set then the read process begins. the value is set to the number of bytes returned from the read_to_string function. if nothing is returned then the string is checked to see if anything was read into the string. If nothing was joined to string then GNL exits. If there isnt a value but the string has data then the read_to_string has worked it's way through the whole file and there was no new line. a new line is added to the end of the string. if the value is less than zero then an error occured in read_to_string and the program exits with -1. the string is then checked to see if it now contains a new line and the chk variable is updated. the loop continues until chk has a value. line is then set to a substring of the string from the start to the \n character. the static variable is then set to a copy of the string at the point of the new line. the program exits with a 1. 